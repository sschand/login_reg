Sharol Chand, 4/19/2016 - Coding Dojo - PHP - MVC - Login and Registration

Assignment: Login and Registration
MandatoryDeadline: Friday of Week 2Difficulty Level: IntermediateEstimated Time: 3-6 hrs
Build a program using CodeIgniter that allows the user to register and login. Once the user logs in, display a message that says that the user is logged in and display information about the user (email, first name, last name, password, created_datetime, etc). Have this be handled by a controller called "Login".



Requirements
1. Use CI Form Validation Class to validate the fields.

1.1 Check whether the email address already exists in the database. 
1.2 Check whether the email address is entered properly. 
1.3 Check password's length - make it at least 8 characters. 
1.4 Check if the password and confirm password field has the same value.

See sample code below.

$this->load->library("form_validation");
$this->form_validation->set_rules("first_name", "First Name", "trim|required");
if($this->form_validation->run() === FALSE)
{
     //$this->view_data["errors"] = validation_errors();
}
else
{
     //codes to run on success validation here
}
Function set_rules() of Form Validation Class has 3 parameters (name of the input field to be validated, a label for the error message, and the validation rules for a particular field.

$this->form_validation->set_rules("first_name", "First Name", "trim|required");
Function run() executes the validation and will return TRUE if all validation rules are met else it will return FALSE and all validation errors will be available in function validation_errors().

$this->form_validation->run()
For the full list of available validation rules visit http://ellislab.com/codeigniter/user-guide/libraries/form_validation.html#rulereference. Focus in this section only no need to waste your time the other contents of this web page. Feel free to ask help from your instructor/remote TA if you need extra help.
On login check whether email address and password combination is correct.
Allow the user to log off.
Other helpful Tips: Login and Logout with Session Class
Below is a simple implementation of the Session Class in handling user Login and Logout.

Student Model application/models/student_model.php


class Student_model extends CI_Model {
   function get_student_by_email($email)
   { 
       return $this->db->query("SELECT * FROM students WHERE email = ?", array($email))
                         ->row_array();
   }
}
Student Login Page application/views/student_login_page.php

<!DOCTYPE html>
<html>
<head>
  <title>Login</title>
</head>
<body>
<?php 
  if($this->session->flashdata("login_error")) 
  {
    echo $this->session->flashdata("login_error");
  }
?>
  <form action="/students/login" method="post">
    <input type="text" name="email" />
    <input type="password" name="password" />
    <input type="submit" value="Login" />
  </form>
</body>
</html>
Students Controller application/controllers/students.php

class Students extends CI_Controller {
    //loads the login view
    public function index()
    {
        $this->load->view('student_login_page');
    }
    //processes the student login
    public function login()
    {
        $email = $this->input->post('email');
        $password = md5($this->input->post('password'));
        $this->load->model('Student_model');
        $student = $this->Student_model->get_student_by_email($email);
        if($student && $student['password'] == $password)
        {
            $user = array(
               'student_id' => $student['id'],
               'student_email' => $student['email'],
               'student_name' => $student['first_name'].' '.$student['last_name'],
               'is_logged_in' => true
            );
            $this->session->set_userdata($user);
            redirect("/students/profile");
        }
        else
        {
            $this->session->set_flashdata("login_error", "Invalid email or password!");
            redirect("/students/index");
        }
    }
    //simple profile page of a student
    public function profile()
    {
        if($this->session->userdata('is_logged_in') === TRUE)
            echo "Your are now logged in! Click <a href='/students/logout'>Here</a> to Logout.";
        else
            redirect("/students/login");
    }
    //logout the student
    public function logout()
    {
        $this->session->sess_destroy();
        redirect("/students/index");   
    }
}
Reminder: Aside from using Session Class, the sample codes above also shows how Models, Views, and Controllers work with each other along with Input Class ($this->input->post()) and URL Helper (redirects()).